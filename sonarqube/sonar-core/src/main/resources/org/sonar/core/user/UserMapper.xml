<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.core.user.UserMapper">

  <sql id="userColumns">
    u.id as id,
    u.login as login,
    u.name as name,
    u.email as email,
    u.created_at as "createdAt",
    u.updated_at as "updatedAt",
    u.active as "active"
  </sql>

    <select id="selectUser" parameterType="long" resultType="User">
    SELECT
    <include refid="userColumns"/>
    FROM users u WHERE u.id=#{id}
  </select>

  <select id="selectUserByLogin" parameterType="string" resultType="User">
    SELECT
    <include refid="userColumns"/>
    FROM users u WHERE u.login=#{id} AND u.active=${_true}
  </select>

  <select id="selectUsersByLogins" parameterType="map" resultType="User">
    SELECT
    <include refid="userColumns"/>
    FROM users u WHERE u.login IN
    <foreach item="login" index="index" collection="logins" open="(" separator="," close=")">
      #{login}
    </foreach>
  </select>

  <select id="selectUsers" parameterType="map" resultType="User">
    SELECT
    <include refid="userColumns"/>
    FROM users u
    <where>
      <if test="logins != null and logins.size() > 0">
        u.login IN
        <foreach item="login" index="index" collection="logins" open="(" separator="," close=")">
          #{login}
        </foreach>
      </if>
      <if test="includeDeactivated==false">
        AND u.active=${_true}
      </if>
      <if test="searchText != null">
        AND (u.login LIKE #{searchTextSql} ESCAPE '/' OR u.name LIKE #{searchTextSql} ESCAPE '/')
      </if>
    </where>
    ORDER BY u.name
  </select>


  <select id="selectGroupByName" parameterType="string" resultType="Group">
    SELECT id, name, description, created_at AS "createdAt", updated_at AS "updatedAt"
    FROM groups WHERE name=#{id}
  </select>

  <delete id="removeUserFromGroups" parameterType="long">
    DELETE FROM groups_users WHERE user_id=#{id}
  </delete>

  <delete id="deleteUserRoles" parameterType="long">
    DELETE FROM user_roles WHERE user_id=#{id}
  </delete>

  <delete id="deleteUserProperties" parameterType="long">
    DELETE FROM properties WHERE user_id=#{id}
  </delete>

  <delete id="deleteUserDashboards" parameterType="long">
    DELETE FROM dashboards WHERE user_id=#{id}
  </delete>

  <delete id="deleteUserActiveDashboards" parameterType="long">
    DELETE FROM active_dashboards WHERE user_id=#{id}
  </delete>

  <delete id="" parameterType="long">
    DELETE FROM user_roles WHERE user_id=#{id}
  </delete>

  <delete id="deleteUserMeasureFilters" parameterType="long">
    DELETE FROM measure_filters WHERE user_id=#{id}
  </delete>

  <delete id="deleteUserMeasureFilterFavourites" parameterType="long">
    DELETE FROM measure_filter_favourites WHERE user_id=#{id}
  </delete>

  <delete id="deleteUserIssueFilters" parameterType="String">
    DELETE FROM issue_filters WHERE user_login=#{id}
  </delete>

  <delete id="deleteUserIssueFilterFavourites" parameterType="String">
    DELETE FROM issue_filter_favourites WHERE user_login=#{id}
  </delete>

  <update id="deactivateUser" parameterType="long">
    UPDATE users SET active=${_false} WHERE id=#{id}
  </update>

</mapper>
