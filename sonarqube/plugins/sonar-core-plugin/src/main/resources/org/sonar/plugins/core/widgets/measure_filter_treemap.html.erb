<%
   filter_id = widget_properties['filter']
   size_metric = widget_properties['sizeMetric']
   color_metric = widget_properties['colorMetric']
   filter = MeasureFilter.find_by_id(filter_id.to_i) if filter_id
   if filter
     url_options = {:controller => 'measures', :action => 'filter', :id => filter.id, :display => 'treemap'}
     filter.load_criteria_from_data
     filter.set_criteria_value(:display, 'treemap')
     if size_metric
       filter.set_criteria_value(:tmSize, size_metric.key)
       url_options[:tmSize]=size_metric.key
     end
     if color_metric
       filter.set_criteria_value(:tmColor, color_metric.key)
       url_options[:tmColor]=color_metric.key
     end
     filter.set_criteria_value(:tmHeight, widget_properties['heightInPercents'])


     if !filter.require_authentication? || logged_in?
       filter.execute(self, :user => current_user)

       @widget_title = link_to h(filter.name), url_options
%>

  <% if widget_properties['displayFilterDescription'] && !filter.description.blank? %>
    <div style="padding-bottom: 5px">
      <span class="note"><%= h filter.description -%></span>
    </div>
  <% end %>

    <%= render :partial => "measures/display_#{filter.display.key}", :locals => {:edit_mode => false, :widget_id => widget.id, :filter => filter} %>
<%
     end
  else
%>
  <p><%= image_tag 'warning.png' %> <%= message 'measure_filter.widget.unknown_filter_warning' -%></p>
<%
     end
%>